version: "3"

services:
  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      args:
        - edition=team
    restart: unless-stopped
    volumes:
      - ./volumes/webapp-builder:/output
      - ./volumes/app/mattermost/config:/mattermost/config:rw
      - ./volumes/app/mattermost/data:/mattermost/data:rw
      - ./volumes/app/mattermost/logs:/mattermost/logs:rw
      - ./volumes/app/mattermost/plugins:/mattermost/plugins:rw
      - ./volumes/app/mattermost/client-plugins:/mattermost/client/plugins:rw
      - /etc/localtime:/etc/localtime:ro
      # When you want to use SSO with GitLab, you have to add the cert pki chain of GitLab inside Alpine
      # to avoid Token request failed: certificate signed by unknown authority (link: https://github.com/mattermost/mattermost-server/issues/13059)
      # - <path_to_your_gitlab_pki>/pki_chain.pem:/etc/ssl/certs/pki_chain.pem:ro
    environment:
      # set same as db credentials and dbname
      - MM_USERNAME=${MM_USERNAME:-mattermost}
      - MM_PASSWORD=${MM_PASSWORD:-changemeReally!23453}
      - MM_DBNAME=${MM_DBNAME:-mattermost}
      - MM_SQLSETTINGS_DRIVERNAME=${MM_SQLSETTINGS_DRIVERNAME:-postgres}
      - MM_SQLSETTINGS_DATASOURCE=${MM_SQLSETTINGS_DATASOURCE:-postgres://mattermost:changemeReally!23453@db2:5432/mattermost?sslmode=disable&connect_timeout=10}

      # in case your config is not in default location
      #- MM_CONFIG=/mattermost/config/config.json
    ports:
      - "80:8000"



#  db3:
#    image: mariadb
#    restart: unless-stopped
#    environment:
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-someDefaultPass}
#      - MYSQL_DATABASE=${MM_DBNAME:-mattermost}
#      - MYSQL_USER=${MM_USERNAME:-mattermost}
#      - MYSQL_PASSWORD=${MM_PASSWORD:-changemeReally!23453}
#    volumes:
#      - ./volumes/db3/mysqldata:/var/lib/mysql


  db2:
    image: postgres:13.2
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${MM_DBNAME:-mattermost}
      - POSTGRES_USER=${MM_USERNAME:-mattermost}
      - POSTGRES_PASSWORD=${MM_PASSWORD:-changemeReally!23453}
    volumes:
      - ./volumes/db/var/lib/postgresql/data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro


#  webapp-builder:
#    build:
#      context: webapp-builder
#    restart: "no"


networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400
